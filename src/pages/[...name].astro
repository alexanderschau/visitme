---
import { getS3 } from "../utils";
import RenderContent from "../components/renderContent.svelte";
import cookie from "cookie"

const token = cookie.parse(Astro.request.headers.get("cookie") || "").token;

const name = Astro.params.name;
let profile: ProfileType;
try {
  const respText = await getS3(`${name}.json`);
  profile = JSON.parse(respText);
} catch{
  profile = {
    name: "404 - Page not found",
    img: "https://openmoji.org/data/color/svg/1F625.svg",
    description: "This page is still unused",
    content: [
      {
        type: "link",
        data: {
          label: "Make it yours!",
          url: "/edit/" + name,
        },
      },
    ],
  };
  //return new Response("not found", { status: 404 });
}
const nameExp = new RegExp("^team(/.+)?$");
const nameParts = name.split("/");
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{profile.name}</title>
  </head>
  <body>
    <div class="absolute top-0 left-0 h-full w-full px-2">
      <div class="text-center max-w-lg mx-auto my-14 px-2">
        {nameParts.length > 1 ? (
          <div class="mb-6 text-left text-gray-400">
            <a
              class="hover:underline hover:underline-offset-2"
              href={"/" + nameParts[0]}
            >
              {nameParts[0]}
            </a>
            {nameParts.slice(1).map((part, i) => (
              <>
                <span class="mx-1 text-gray-300">/</span>
                <a
                  class="hover:underline hover:underline-offset-2"
                  href={"/" + nameParts.slice(0, i + 2).join("/")}
                >
                  {part}
                </a>
              </>
            ))}
          </div>
        ) : (
          ""
        )}
        <img
          class="h-28 w-28 object-cover rounded-full block mx-auto"
          src={profile.img}
        />
        <div class="my-5">
          <div
            class={`text-3xl font-bold ${
              name.match(nameExp) ? "rainbow_text_animated" : ""
            }`}
          >
            {profile.name}
          </div>
          <div>{profile.description}</div>
        </div>
        <RenderContent content={profile.content} />
        <div class="my-8 text-black text-opacity-60">
        {token?(<a
          href={"/edit/" + name}
          class="hover:underline hover:underline-offset-2 italic"
          >Edit page
        </a><br/>):""}
        hosted by <a href="/team" class="hover:underline hover:underline-offset-2 italic">visitme.cyou</a>
        </div>
      </div>
    </div>
    <style>
      .rainbow_text_animated {
        background: linear-gradient(
          to right,
          #6666ff,
          #0099ff,
          #00ff00,
          #ff3399,
          #6666ff
        );
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        animation: rainbow_animation 6s ease-in-out infinite;
        background-size: 400% 100%;
      }

      @keyframes rainbow_animation {
        0%,
        100% {
          background-position: 0 0;
        }

        50% {
          background-position: 100% 0;
        }
      }
    </style>
  </body>
</html>
